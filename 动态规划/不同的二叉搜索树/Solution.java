class Solution {
    public int numTrees(int n) {
        // 找规律
        // n=3 的情况等于头节点为3的情况+头节点为2的情况+头节点为1的情况
        // 头节点为1 = 左边0个节点的情况*右边2个节点的情况
        // 头节点为2 = 左边1个节点的情况*右边1个节点的情况
        // 头节点为3 = 左边2个节点的情况*右边0个节点的情况
        int[] dp = new int[n+1];
        dp[0] = 1;
        dp[1] = 1;
        // 从2开始
        for(int i=2;i<n+1;i++){
            // 对于i个节点
            // 以每个节点（1到i）为头节点
            for(int j=1;j<=i;j++){
                // 左边的节点个数*右边的节点个数
                // 例如头节点为3的情况，左边有2个节点，右边有0个节点
                dp[i] += dp[j-1]*dp[i-j];
            }
        }
        return dp[n];
    }
}